<?xml version="1.0" encoding="UTF-8"?>
<project name="simple-http-client" default="all">


    <property file="build.properties"/>
    <!-- Uncomment the following property if no tests compilation is needed -->
    <!--
    <property name="skip.tests" value="true"/>
     -->

    <!-- Compiler options -->

    <property name="compiler.debug" value="on"/>
    <property name="compiler.generate.no.warnings" value="off"/>
    <property name="compiler.args" value=""/>
    <property name="compiler.max.memory" value="128m"/>
    <patternset id="ignored.files">
        <exclude name="**/CVS/**"/>
        <exclude name="**/SCCS/**"/>
        <exclude name="**/RCS/**"/>
        <exclude name="**/rcs/**"/>
        <exclude name="**/.DS_Store/**"/>
        <exclude name="**/.svn/**"/>
        <exclude name="**/.pyc/**"/>
        <exclude name="**/.pyo/**"/>
        <exclude name="**/*.pyc/**"/>
        <exclude name="**/*.pyo/**"/>
        <exclude name="**/.git/**"/>
        <exclude name="**/*.hprof/**"/>
        <exclude name="**/_svn/**"/>
        <exclude name="**/.hg/**"/>
        <exclude name="**/*.lib/**"/>
        <exclude name="**/*~/**"/>
        <exclude name="**/__pycache__/**"/>
        <exclude name="**/.bundle/**"/>
        <exclude name="**/*.rbc/**"/>
        <exclude name="**/*.o/**"/>
        <exclude name="**/*.obj/**"/>
    </patternset>
    <patternset id="library.patterns">
        <include name="*.zip"/>
        <include name="*.apk"/>
        <include name="*.war"/>
        <include name="*.egg"/>
        <include name="*.ear"/>
        <include name="*.ane"/>
        <include name="*.swc"/>
        <include name="*.jar"/>
    </patternset>
    <patternset id="compiler.resources">
        <exclude name="**/?*.java"/>
        <exclude name="**/?*.form"/>
        <exclude name="**/?*.class"/>
        <exclude name="**/?*.groovy"/>
        <exclude name="**/?*.scala"/>
        <exclude name="**/?*.flex"/>
        <exclude name="**/?*.kt"/>
        <exclude name="**/?*.clj"/>
    </patternset>


    <!-- Global Libraries -->

    <path id="library.junit4.classpath">
        <pathelement location="/home/mk/work/lib/hamcrest-core-1.3.jar"/>
        <pathelement location="/home/mk/work/lib/junit-4.11.jar"/>
    </path>

    <!-- Modules -->


    <!-- Module simple-http-client -->

    <dirname property="module.simple-http-client.basedir" file="${ant.file}"/>


    <property name="compiler.args.simple-http-client" value="${compiler.args}"/>

    <property name="simple-http-client.output.dir"
              value="${module.simple-http-client.basedir}/out/production/simple-http-client"/>
    <property name="simple-http-client.testoutput.dir"
              value="${module.simple-http-client.basedir}/out/test/simple-http-client"/>

    <path id="simple-http-client.module.bootclasspath">
        <!-- Paths to be included in compilation bootclasspath -->
    </path>

    <path id="simple-http-client.module.production.classpath">
        <path refid="library.junit4.classpath"/>
        <fileset dir="${basedir}/lib">
            <patternset refid="library.patterns"/>
        </fileset>
    </path>

    <path id="simple-http-client.runtime.production.module.classpath">
        <pathelement location="${simple-http-client.output.dir}"/>
        <path refid="library.junit4.classpath"/>
        <fileset dir="${basedir}/lib">
            <patternset refid="library.patterns"/>
        </fileset>
    </path>

    <path id="simple-http-client.module.classpath">
        <pathelement location="${simple-http-client.output.dir}"/>
        <path refid="library.junit4.classpath"/>
        <fileset dir="${basedir}/lib">
            <patternset refid="library.patterns"/>
        </fileset>
    </path>

    <path id="simple-http-client.runtime.module.classpath">
        <pathelement location="${simple-http-client.testoutput.dir}"/>
        <pathelement location="${simple-http-client.output.dir}"/>
        <path refid="library.junit4.classpath"/>
        <fileset dir="${basedir}/lib">
            <patternset refid="library.patterns"/>
        </fileset>
    </path>


    <patternset id="excluded.from.module.simple-http-client">
        <patternset refid="ignored.files"/>
    </patternset>

    <patternset id="excluded.from.compilation.simple-http-client">
        <patternset refid="excluded.from.module.simple-http-client"/>
    </patternset>

    <path id="simple-http-client.module.sourcepath">
        <dirset dir="${module.simple-http-client.basedir}">
            <include name="src"/>
        </dirset>
    </path>

    <path id="simple-http-client.module.test.sourcepath">
        <dirset dir="${module.simple-http-client.basedir}">
            <include name="test"/>
        </dirset>
    </path>


    <target name="compile.module.simple-http-client"
            depends="compile.module.simple-http-client.production,compile.module.simple-http-client.tests"
            description="Compile module simple-http-client"/>

    <target name="compile.module.simple-http-client.production"
            description="Compile module simple-http-client; production classes">
        <mkdir dir="${simple-http-client.output.dir}"/>
        <javac destdir="${simple-http-client.output.dir}" debug="${compiler.debug}"
               nowarn="${compiler.generate.no.warnings}" memorymaximumsize="${compiler.max.memory}" fork="true">
            <compilerarg line="${compiler.args.simple-http-client}"/>
            <bootclasspath refid="simple-http-client.module.bootclasspath"/>
            <classpath refid="simple-http-client.module.production.classpath"/>
            <src refid="simple-http-client.module.sourcepath"/>
            <patternset refid="excluded.from.compilation.simple-http-client"/>
        </javac>

        <copy todir="${simple-http-client.output.dir}">
            <fileset dir="${module.simple-http-client.basedir}/src">
                <patternset refid="compiler.resources"/>
                <type type="file"/>
            </fileset>
        </copy>
    </target>

    <target name="compile.module.simple-http-client.tests" depends="compile.module.simple-http-client.production"
            description="compile module simple-http-client; test classes" unless="skip.tests">
        <mkdir dir="${simple-http-client.testoutput.dir}"/>
        <javac destdir="${simple-http-client.testoutput.dir}" debug="${compiler.debug}"
               nowarn="${compiler.generate.no.warnings}" memorymaximumsize="${compiler.max.memory}" fork="true">
            <compilerarg line="${compiler.args.simple-http-client}"/>
            <bootclasspath refid="simple-http-client.module.bootclasspath"/>
            <classpath refid="simple-http-client.module.classpath"/>
            <src refid="simple-http-client.module.test.sourcepath"/>
            <patternset refid="excluded.from.compilation.simple-http-client"/>
        </javac>

        <copy todir="${simple-http-client.testoutput.dir}">
            <fileset dir="${module.simple-http-client.basedir}/test">
                <patternset refid="compiler.resources"/>
                <type type="file"/>
            </fileset>
        </copy>
    </target>

    <target name="clean.module.simple-http-client" description="cleanup module">
        <delete dir="${simple-http-client.output.dir}"/>
        <delete dir="${simple-http-client.testoutput.dir}"/>
    </target>

    <target name="init" description="Build initialization">
        <!-- Perform any build initialization in this target -->
    </target>

    <target name="clean" depends="clean.module.simple-http-client" description="cleanup all"/>

    <target name="build.modules" depends="init, clean, compile.module.simple-http-client"
            description="build all modules"/>

    <target name="init.artifacts">
        <property name="artifacts.temp.dir" value="${basedir}/__artifacts_temp"/>
        <property name="artifact.output.protolab-http-client-1.0.0"
                  value="${basedir}/out/artifacts/protolab_http_client_1_0_0"/>
        <mkdir dir="${artifacts.temp.dir}"/>
        <property name="temp.jar.path.protolab-http-client-1.0.0.jar"
                  value="${artifacts.temp.dir}/protolab-http-client-1.0.0.jar"/>
    </target>

    <target name="artifact.protolab-http-client-1.0.0" depends="init.artifacts, compile.module.simple-http-client"
            description="Build &#39;protolab-http-client-1.0.0&#39; artifact">
        <property name="artifact.temp.output.protolab-http-client-1.0.0"
                  value="${artifacts.temp.dir}/protolab_http_client_1_0_0"/>
        <mkdir dir="${artifact.temp.output.protolab-http-client-1.0.0}"/>
        <jar destfile="${temp.jar.path.protolab-http-client-1.0.0.jar}" duplicate="preserve"
             filesetmanifest="mergewithoutmain">
            <zipfileset dir="${simple-http-client.output.dir}"/>
        </jar>
        <copy file="${temp.jar.path.protolab-http-client-1.0.0.jar}"
              tofile="${artifact.temp.output.protolab-http-client-1.0.0}/protolab-http-client-1.0.0.jar"/>
    </target>

    <target name="build.all.artifacts" depends="artifact.protolab-http-client-1.0.0" description="Build all artifacts">
        <mkdir dir="${artifact.output.protolab-http-client-1.0.0}"/>
        <copy todir="${artifact.output.protolab-http-client-1.0.0}">
            <fileset dir="${artifact.temp.output.protolab-http-client-1.0.0}"/>
        </copy>

        <!-- Delete temporary files -->
        <delete dir="${artifacts.temp.dir}"/>
    </target>

    <target name="all" depends="build.modules, build.all.artifacts" description="build all"/>
</project>